#apn.spring.datasource.url=##FIXME
#apn.spring.datasource.username=##FIXME
#apn.spring.datasource.password=##FIXME
#apn.spring.datasource.initialize=false
#apn.spring.datasource.driver-class-name=oracle.jdbc.OracleDriver


#Tomcat params
server.port = 8090
#server.servlet.context-path=/branch.core
server.servlet.context-path=/v1/pymtprtl
spring.application.name=${ServiceName}


#spring.jackson.time-zone=America/Bogota


#URL parameter institution service
#bank.core.service.url=http://apnse-institutioncore-service.payments-apps-dev.svc.cluster.local:8090/institution.core/apn/services/v1/institution/get
intitution.service.type=BANK
#bank.core.service.url=http://localhost:5000/institution.core/apn/services/v1/institution/get
bank.core.service.url=http://apnse-institutioncore-service.payments-apps-dev.svc.cluster.local:8090/v1/pymtprtl/apn/services/pymtinst/institutioncore/institutionlist

#openApi parameters
springdoc.version=V1
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true


## DB Connection
spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS = (PROTOCOL = TCPS)(HOST = vc0dbwud-scan.dev.prod.wudip.com)(PORT = 2484)) (CONNECT_DATA = (SERVER = DEDICATED) (SERVICE_NAME = WUDCRSD)))
spring.datasource.username=PAYOUTDEV11
spring.datasource.password=${secret.pymnts.apn.persistence.database.payout.password}
spring.datasource.driverClassName=oracle.jdbc.driver.OracleDriver
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect

spring.datasource.max-active=10
spring.datasource.initial-size=1
spring.datasource.max-idle=5
spring.datasource.min-idle=1
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1 FROM DUAL

spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS


# 1P Properties
logging.level.root=INFO
logging.level.org.springframework.web=DEBUG
logging.pattern.level = action=%X{signature} txId=%X{txId} partnerId=%X{partnerId} cdeTypeTx=%X{cdeTypeTx}%5p

#Show SQL
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

ServiceId=PYMBRANC
ServiceName=pymtinst_branchcore_v1_svc
ServiceBuildID=APN-IC


wu.resttemplate.headerpropagator.include=true
wu.webfilter.requestcontext.include=true
wu.interceptor.controller.methodname.include=true

#Kafka error code configuration
errorevents.kafka.producer.bootstrapServers=b-1.wanv-wnp-0-msk-2.cgx40y.c4.kafka.us-east-1.amazonaws.com:9094,b-3.wanv-wnp-0-msk-2.cgx40y.c4.kafka.us-east-1.amazonaws.com:9094,b-2.wanv-wnp-0-msk-2.cgx40y.c4.kafka.us-east-1.amazonaws.com:9094
errorevents.kafka.producer.acks=0
errorevents.kafka.producer.retries=3
errorevents.kafka.producer.maxBlockTimeInMs=1000
errorevents.kafka.producer.maxInFlightRequestsPerCon=5
errorevents.kafka.producer.requestTimeoutInMs=30000
errorevents.kafka.producer.clientId=branch_core_v1_svc
errorevents.kafka.producer.topic=WU.DEV.COMMON.ERROR.EVENT
errorevents.kafka.producer.key=pymtinst_branchcore_v1_svc
errorevents.emailTo=apn_svcenhancement@westernunion.com
errorevents.kafka.producer.security.sslKeyStorePwd=changeit
errorevents.kafka.producer.security.sslKeyPwd=changeit
errorevents.kafka.producer.security.keyStoreLocation=/apps/certificates/kafka_pymtapn_keystore_nonprod.jks
errorevents.kafka.producer.security.trustStoreLocation=/apps/certificates/kafka_client_truststore.jks


apn.frontend.resources.url=
apn.frontend.imgs.url=

